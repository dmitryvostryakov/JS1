//1. Объясните почему код даёт именно такие результаты?

//пример 1
let a = 1, b = 1, c, d;
c = ++a;
alert(c); // ответ: 2 - т.к. "a = 1", а c = инкременту "а" 

//пример 2
d = b++;
alert(d); //ответ: 1 - т.к. был выдан результат b до инкремента из-за постфикса, инкремент произойдет на следующей стадии

//пример 3
c = 2 + ++a;
alert(c); //ответ: 5 - т.к. инкремент "а" уже был в примере 1

//пример 4
d = 2 + b++;
alert(d); //ответ: 4 - т.к. инкремент "b" уже произошел после примера №2, но пока не произошел ещё раз
alert(a); //3 - т.к. инкремент происходил в примере 1 и 3, а начальное значение = 1
alert(b); //3 - т.к. инкремент происходил в примере 2 и 4 постфиксом, а начальное значение = 1

//2. Чему будут равны переменные x и a в примере ниже? Написать почему так произошло (описать последовательность действий).
let a = 2; // - задаём переменную a = 2
let x = 1 + (a *= 2); // - задаём переменную x = 1 + (2*2), x =5, тут используется оператор Multiplication assignment

//3. Объявить две переменные a и b и задать им целочисленные произвольные начальные значения.
let a = 5;
let b = 9;

//- если a и b положительные, вывести их разность (ноль можно считать положительным числом);
if (a > 0 && b > 0) {
	alert(a-b);
}

//- если а и b отрицательные, вывести их произведение;
if (a < 0 && b < 0) {
	alert(a*b);
}

//- * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму;
if (a < 0 && b > 0 || a > 0 && b < 0) {
	alert(a+b);
}

//4. Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с двумя параметрами.

function sum (num1, num2) {
	return (num1 + num2);
}

function minus (num1, num2) {
	return (num1 - num2);
}

function division (num1,num2) {
	return (num1 / num2);
}

function multiply (num1, num2) {
	return (num1*num2);
}

/*5. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от
переданного значения операции (использовать switch) выполнить одну из арифметических
операций
(использовать функции из задания 4) и вернуть полученное значение.*/

function mathOperation(arg1, arg2, operation) {
switch(operation){
	case sum:
	alert (sum(arg1, arg2));
	break;

	case minus:
	alert (minus(arg1, arg2));
	break;

	case division:
	alert (division(arg1, arg2));
	break;

	case multiply:
	alert (multiply(arg1, arg2));
	break; }
}

x = mathOperation(150,10,plus);
alert(x);

/* 6**. (Очень сложное задание, по желанию.) Программа должна спросить у пользователя
количество денег, которое он хочет положить в банк. Пользователь должен ввести целое число, а
программа должна выдать соответствующее сообщение:
"Ваша сумма в 101 рубль успешно зачислена." - в случае если пользователь ввел 101.
"Ваша сумма в 10020 рублей успешно зачислена." - в случае если пользователь ввел 10020.
"Ваша сумма в 120104 рубля успешно зачислена." - в случае если пользователь ввел 120104.
Если пользователь введет любое другое целое число, программа также должна выдать
соответствующее сообщение, в котором будет отображено это число, а также поставить верное
окончание в слове "рубль". Для получения верного склонения слова (любого слова с числом) вам
необходимо создать функцию. */

let x = parseInt(prompt ("Введите сумму к зачислению"),10);
 
function ordinal_suffix_of(x) {
               let j = x % 10,
                   k = x % 100;
  if (j == 1 && k != 11) {
               return "рубль";
  }
  if (j == 2 && k != 12) {
               return "рубля";
  }
  if (j == 3 && k != 13) {
               return "рубля";
  }
  if (j == 4 && k != 14) {
               return "рубля";
  }
  return "рублей";
}
 
if (x === parseInt(x,10))
               alert("Ваша сумма" + " " + x + " " + ordinal_suffix_of(x) + " " + "успешно зачислена");
else
               alert("Введите сумму!");